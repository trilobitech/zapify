def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def secretsPropertiesFile = rootProject.file("secrets.properties")
if (!secretsPropertiesFile.exists()) {
    secretsPropertiesFile = rootProject.file("secrets.defaults.properties")
}
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (flutterMinSdkVersion == null) {
    flutterMinSdkVersion = '19'
}

def isFirebaseDistribution = System.getenv('IS_FIREBASE_DISTRIBUTION') == 'true'

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.zapfy.app"

        minSdkVersion flutterMinSdkVersion.toInteger()
        targetSdkVersion 33

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        manifestPlaceholders["ADS_APP_ID"] = System.getenv('ANDROID_ADS_APP_ID') ?: secretsProperties.getProperty('ads.appId')
    }

    signingConfigs {
        release {
            storeFile file(System.getenv('ANDROID_KEYSTORE_PATH') ?: secretsProperties['keystore.path'].replaceFirst('~', System.getenv('HOME')))
            storePassword System.getenv('ANDROID_KEYSTORE_PASSWORD') ?: secretsProperties['keystore.password']
            keyAlias System.getenv('ANDROID_KEYSTORE_KEY_ALIAS') ?: secretsProperties['keystore.keyAlias']
            keyPassword System.getenv('ANDROID_KEYSTORE_KEY_PASSWORD') ?: secretsProperties['keystore.keyPassword']
        }
    }

    buildTypes {
        debug {
            FirebasePerformance {
                instrumentationEnabled false
            }
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug
        }

        release {
            applicationIdSuffix isFirebaseDistribution ? ".dev" : ""
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        debug {
            res.srcDirs += ['src/dev/res']
        }
        release {
            res.srcDirs += isFirebaseDistribution ? ['src/dev/res'] : []
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation platform('com.google.firebase:firebase-bom:30.3.0')
    implementation 'com.google.firebase:firebase-analytics'
}
