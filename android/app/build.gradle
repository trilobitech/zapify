plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"

    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def secretsPropertiesFile = rootProject.file("secrets.properties")
if (!secretsPropertiesFile.exists()) {
    secretsPropertiesFile = rootProject.file("secrets.defaults.properties")
}
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

def flutterVersionCode = localProperties['flutter.versionCode'] ?: '1'
def flutterVersionName = localProperties['flutter.versionName'] ?: '1.0'

def isFirebaseDistribution = System.getenv('IS_FIREBASE_DISTRIBUTION') == 'true'

android {
    namespace = "com.trilobitech.zapify"

    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.zapfy.app"

        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion

        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName

        manifestPlaceholders["ADS_APP_ID"] = System.getenv('ANDROID_ADS_APP_ID') ?: secretsProperties.getProperty('ads.appId')
    }

    signingConfigs {
        release {
            storeFile file(System.getenv('ANDROID_KEYSTORE_PATH') ?: secretsProperties['keystore.path'].replaceFirst('~', System.getenv('HOME')))
            storePassword System.getenv('ANDROID_KEYSTORE_PASSWORD') ?: secretsProperties['keystore.password']
            keyAlias System.getenv('ANDROID_KEYSTORE_KEY_ALIAS') ?: secretsProperties['keystore.keyAlias']
            keyPassword System.getenv('ANDROID_KEYSTORE_KEY_PASSWORD') ?: secretsProperties['keystore.keyPassword']
        }
    }

    buildTypes {
        debug {
            FirebasePerformance {
                instrumentationEnabled false
            }
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug
        }

        release {
            applicationIdSuffix isFirebaseDistribution ? ".dev" : ""
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        debug {
            res.srcDirs += ['src/dev/res']
        }
        release {
            res.srcDirs += isFirebaseDistribution ? ['src/dev/res'] : []
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:30.5.0')
    implementation 'com.google.firebase:firebase-analytics'

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
}
