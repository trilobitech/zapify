name: "Distribute iOS Flutter app"

on:

  workflow_call:
    inputs:
      environment:
        description: "Distribution environment"
        type: string
        required: true

    secrets:
      TESTER_EMAIL:
        required: false
      AMPLITUDE_KEY:
        required: true
      FIREBASE_TOKEN:
        required: true
      IOS_ADS_APP_ID:
        required: true
      APPLE_ID:
        required: true
      APP_STORE_API_KEY:
        required: true
      GC_BUCKET_NAME:
        required: true
      GC_KEYS:
        required: true

env:
  CI: true

jobs:

  distribute:
    runs-on: macos-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          lfs: ${{ inputs.environment == 'production' }}

      - id: versions
        name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1

      - name: Create file with definition of XCode version
        working-directory: ios
        run: |
          echo "${{ steps.versions.outputs.xcode }}" > .xcode-version

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2.21.0
        with:
          channel: stable
          flutter-version: ${{ steps.versions.outputs.flutter }}

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Install project dependencies
        run: flutter pub get

      - name: Set iOS secrets files
        working-directory: ./ios
        run: |
          base64 -d <<< "${{ secrets.GC_KEYS }}" > $GC_KEYS_PATH
          base64 -d <<< "${{ secrets.APP_STORE_API_KEY }}" > $APP_STORE_API_KEY_PATH

          tee $SECRETS_CONFIG_PATH <<EOF
          IOS_ADS_APP_ID=$IOS_ADS_APP_ID
          EOF
        env:
          IOS_ADS_APP_ID: ${{ secrets.IOS_ADS_APP_ID }}
          SECRETS_CONFIG_PATH: ./Flutter/Secrets.xcconfig
          GC_KEYS_PATH: ./gc_keys.json
          APP_STORE_API_KEY_PATH: ${{ runner.temp }}/app-store-api-key.json

      - name: Configure Firebase
        run: |
          curl -sL https://firebase.tools | bash
          dart pub global activate flutterfire_cli
          flutterfire configure -f -y --project=zapfy-f575a \
            --out=lib/firebase_options.dart \
            --platforms=ios --ios-bundle-id=$IOS_BUNDLE_ID
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          IOS_BUNDLE_ID: ${{ vars.IOS_BUNDLE_ID }}

      - name: Install Ruby to use Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.versions.outputs.ruby }}
          bundler-cache: true
          working-directory: ./ios

      - name: Run lane to distribute
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: ${{ vars.TARGET_LANE }}
          options: '{ "tester_email": "${{ secrets.TESTER_EMAIL }}" }'
          subdirectory: ./ios
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
          FASTLANE_DISABLE_COLORS: true
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          ZAPIFY_AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          IOS_BUNDLE_ID: ${{ vars.IOS_BUNDLE_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_STORE_API_KEY_PATH: ${{ runner.temp }}/app-store-api-key.json
          GC_BUCKET_NAME: ${{ secrets.GC_BUCKET_NAME }}
