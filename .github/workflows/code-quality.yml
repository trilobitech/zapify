on:
  pull_request:
    branches:
      - main
    paths:
      - '**.dart'
      - '**/pubspec.*'
      - '*.yaml'
      - assets/**
      - .fvm/fvm_config.json

name: QA Workflow

jobs:
  lint:
    name: Check code standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.2.0

      - name: Retrieve Flutter version from FVM config
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get

      - name: Setup Firebase Options
        run: |
          tee lib/firebase_options.dart <<EOF
          class DefaultFirebaseOptions {
            static const currentPlatform = null;
          }
          EOF

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            \.dart$
            pubspec.yaml

      - name: Get all added and modified files
        id: added-and-modified-files
        run: |
          changed_files=$(echo "${{ steps.changed-files.outputs.added_files }} ${{ steps.changed-files.outputs.modified_files }}" | xargs)
          changed_dart_files=$(echo "$changed_files" | tr ' ' '\n' | grep '\.dart$')

          echo "all='$changed_files'" >> $GITHUB_OUTPUT
          echo "dart='$changed_dart_files'" >> $GITHUB_OUTPUT

      - name: Analyze code
        if: steps.added-and-modified-files.outputs.all
        run: flutter analyze ${{ steps.added-and-modified-files.outputs.all }}

      - name: Check code formatting
        if: steps.added-and-modified-files.outputs.dart
        run: flutter format --output=none ${{ steps.added-and-modified-files.outputs.dart }}

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.2.0

      - name: Retrieve Flutter version from FVM config
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get

      - name: Setup Firebase Options
        run: |
          tee lib/firebase_options.dart <<EOF
          class DefaultFirebaseOptions {
            static const currentPlatform = null;
          }
          EOF

      - name: Run unit tests
        run: flutter test
