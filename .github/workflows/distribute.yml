name: "Distribute App"

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "Build target platform"
        options:
          - android
          - ios
          - all
        type: choice
        required: true
      channel:
        description: "Distribution channel"
        options: 
          - firebase_distribute
          - release_distribute
        type: choice
        required: true

    secrets:
      FILES:
        required: false
      AMPLITUDE_KEY:
        required: false
      FIREBASE_TOKEN:
        required: false

jobs:
  distribute:
    needs: pre-distribute
    strategy:
      matrix: ${{ fromJSON(needs.pre-distribute.outputs.matrix-definition) }}

    runs-on: ${{ matrix.runs-on }}
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - name: Setup Flutter SDK
        uses: ./.github/actions/flutter

      - name: Setup Android SDK
        if: ${{ matrix.platform == 'android' }}
        uses: ./.github/actions/android

      - name: Get secrets files
        run: base64 -d <<< ${{ secrets.FILES }} | tar xzf -

      - name: Distribute
        uses: ./.github/actions/fastlane
        with:
          lane: ${{ matrix.lane }}
          working-directory: ${{ matrix.working-directory }}
        env:
          zapify_amplitudeKey: ${{ secrets.AMPLITUDE_KEY }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  pre-distribute:
    runs-on: ubuntu-latest
    outputs:
      matrix-definition: ${{ steps.definition.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - id: definition
        name: "Prepare distribution"
        run: |
          CHANNEL=${{ github.event.inputs.channel }}
          PLATFORM=${{ github.event.inputs.platform }}

          case "$CHANNEL" in
          release_distribute) ENVIRONMENT=production ;;
          *) ENVIRONMENT="firebase-distribution" ;;
          esac

          JQ_EXPR=$(cat <<EOF
            del( .[] | select(.platform != "$PLATFORM" and "$PLATFORM" != "all"))
            | .[] += { environment: "$ENVIRONMENT", lane: "$CHANNEL" }
          EOF
          )
          MATRIX="{ \"include\": $(bin/yaml2json.py < .github/distribute-platforms.yml | jq -Mc "$JQ_EXPR") }"

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
